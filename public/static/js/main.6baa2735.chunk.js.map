{"version":3,"sources":["pages/home/home.js","pages/login/login.js","pages/login/register.js","reducers/reducers.js","reducers/news.js","reducers/counter.js","reducers/weather.js","reducers/store.js","pages/weather/weather.js","actions/Index.js","pages/news/article.js","pages/news/news.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","pageNum","pageSize","loading","hasMore","console","log","window","location","href","url","type","react_default","a","createElement","react_copy_to_clipboard_lib","text","onCopy","es_button","className","onClick","gotoDetail","bind","cloneBtUrl","getMovieList","_this2","_this$state","affix","react_infinite_scroller_default","pageStart","loadMore","movieLoad","initialLoad","threshold","loader","key","es_list","itemLayout","dataSource","renderItem","item","Item","renderBtn","btUrl","lib_default","Meta","avatar","src","postUrl","title","description","spin","spinning","that","_this$state2","setState","axios","get","concat","then","response","list","length","catch","error","finally","React","Component","Login","userName","pwd","e","preventDefault","params","md5","post","statue","message","msg","router","push","target","value","es_form","onSubmit","handleSubmit","input","prefix","icon","style","color","placeholder","onChange","handleUserInput","handlePwdInput","htmlType","Register","hobby","handleHobbyInput","reducerList","news","arguments","undefined","action","counter","weather","reducers","combineReducers","objectSpread","rootReducer","store","createStore","applyMiddleware","thunk","Weather","city","num1","num2","weatherInfo","getState","renderWeather","realtime","renderList","future","info","aqi","temperature","direct","power","date","dispatch","subscribe","Aticle","content","thumbnail_pic_s","author_name","Option","Select","News","newsType","name","val","textAlign","es_select","defaultValue","newTypeChange","width","marginTop","renderSelect","article","getInitData","types","arr","forEach","element","index","connect","history","createBrowserHistory","App","loggedIn","some","react_router","exact","path","render","to","home_home","login","register","weather_weather","news_news","Boolean","hostname","match","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6baa2735.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport LazyLoad from 'react-lazyload'\nimport { List, Avatar, Button, Affix, Spin } from 'antd'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport '../../style/home.scss'\n// import { thisTypeAnnotation } from '@babel/types'\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [{}, {}, {}],\n      pageNum: 0,\n      pageSize: 20,\n      loading: true,\n      hasMore: true\n    }\n  }\n  gotoDetail(data) {\n    console.log(data)\n    window.location.href = data\n  }\n  cloneBtUrl(url) {}\n  renderBtn(type, url) {\n    if (type === 'blank') {\n      return (\n        <CopyToClipboard\n          text={url}\n          onCopy={() => {\n            console.log(9)\n          }}\n        >\n          <Button\n            type=\"primary\"\n            className=\"tool-button\"\n            onClick={this.gotoDetail.bind(this, url)}\n          >\n            点击查看详情\n          </Button>\n        </CopyToClipboard>\n      )\n    } else {\n      return (\n        <CopyToClipboard text={url} onCopy={() => {}}>\n          <Button\n            type=\"primary\"\n            className=\"tool-button\"\n            onClick={this.cloneBtUrl.bind(this, url)}\n          >\n            点击复制下载链接\n          </Button>\n        </CopyToClipboard>\n      )\n    }\n  }\n  movieLoad() {\n    console.log('90')\n    if (this.state.hasMore) {\n      this.getMovieList()\n    }\n  }\n  render() {\n    const { data, hasMore, loading } = this.state\n    return (\n      <div className=\"home\">\n        <Affix>\n          <h2>聚合电影</h2>\n        </Affix>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={this.movieLoad.bind(this)}\n          hasMore={hasMore}\n          initialLoad={false}\n          threshold={80}\n          loader={<div className=\"loader\" key={0} />}\n        >\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            renderItem={item => (\n              <List.Item>\n                {/* <List.Item.Meta\n                avatar={<Avatar className=\"avatar\" src={item.postUrl} />}\n                title={\n                  <a href=\"http://tfboy.gearhostpreview.com\">{item.title}</a>\n                }\n                description={item.btUrl}\n              /> */}\n                {this.renderBtn(item.type, item.btUrl)}\n\n                <LazyLoad>\n                  <List.Item.Meta\n                    avatar={<Avatar className=\"avatar\" src={item.postUrl} />}\n                    title={<a href=\"http://imov.herokuapp.com\">{item.title}</a>}\n                    description={item.btUrl}\n                  />\n                </LazyLoad>\n              </List.Item>\n            )}\n          />\n          <div className=\"loader\">\n            <Spin spinning={loading} />\n          </div>\n        </InfiniteScroll>\n      </div>\n    )\n  }\n  componentDidMount() {\n    this.getMovieList()\n  }\n  getMovieList() {\n    let that = this\n    let { pageNum, pageSize } = this.state\n    that.setState(\n      {\n        loading: true,\n        hasMore: false\n      },\n      () => {\n        axios\n          .get(`/get_movies?page=${pageNum}&size=${pageSize}`)\n          .then(function(response) {\n            console.log(response)\n            let list = response.data.data\n            if (pageNum === 0) {\n              if (list) {\n                that.setState({\n                  data: list\n                })\n              }\n            } else {\n              if (list) {\n                that.setState({\n                  data: that.state.data.concat(list)\n                })\n              }\n            }\n            if (list.length < pageSize) {\n              that.setState({\n                hasMore: false\n              })\n            }\n            that.setState({\n              loading: false,\n              pageNum: pageNum + 1,\n              hasMore: true\n            })\n          })\n          .catch(function(error) {\n            console.log(error)\n          })\n          .finally(function() {})\n      }\n    )\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport axios from 'axios'\nimport { Input, Form, Button, Icon } from 'antd'\nimport message from 'antd/es/message'\nimport md5 from 'blueimp-md5'\nclass Login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: '',\n      pwd: ''\n    }\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    const params = {\n      userName: this.state.userName,\n      pwd: md5(this.state.pwd)\n    }\n    let that = this\n    axios\n      .post('/login', params)\n      .then(function(response) {\n        // handle success\n        console.log(response)\n        let data = response.data\n        if (data.statue === 0) {\n          message.loading(data.msg, 0.1)\n          that.props.router.push('/home')\n        }\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error)\n      })\n      .finally(function() {\n        // always executed\n      })\n  }\n  handleUserInput(e) {\n    this.setState({\n      userName: e.target.value\n    })\n  }\n  handlePwdInput(e) {\n    this.setState({\n      pwd: e.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"login\">\n        <Form onSubmit={this.handleSubmit.bind(this)} className=\"login-form\">\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              value={this.state.userName}\n              onChange={this.handleUserInput.bind(this)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.pwd}\n              onChange={this.handlePwdInput.bind(this)}\n            />\n          </Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            登陆\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n  componentDidMount() {\n    // console.log(this.props)\n  }\n}\n\nexport default Login\n","import React from 'react'\nimport axios from 'axios'\nimport Input from 'antd/es/input' // 加载 JS\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport Icon from 'antd/es/icon'\nimport md5 from 'blueimp-md5'\nclass Register extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: '',\n      pwd: '',\n      hobby: ''\n    }\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    const params = {\n      userName: this.state.userName,\n      pwd: md5(this.state.pwd),\n      hobby: this.state.hobby\n    }\n    axios\n      .post('/register', params)\n      .then(function(response) {\n        // handle success\n        console.log(response)\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error)\n      })\n      .finally(function() {\n        // always executed\n      })\n  }\n  handleUserInput(e) {\n    this.setState({\n      userName: e.target.value\n    })\n  }\n  handlePwdInput(e) {\n    this.setState({\n      pwd: e.target.value\n    })\n  }\n  handleHobbyInput(e) {\n    this.setState({\n      hobby: e.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"reg\">\n        <Form onSubmit={this.handleSubmit.bind(this)} className=\"login-form\">\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              value={this.state.userName}\n              onChange={this.handleUserInput.bind(this)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.pwd}\n              onChange={this.handlePwdInput.bind(this)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              prefix={\n                <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.25)' }} />\n              }\n              placeholder=\"喜欢的电影类型\"\n              value={this.state.hobby}\n              onChange={this.handleHobbyInput.bind(this)}\n            />\n          </Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            注册\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import { combineReducers } from 'redux'\n//reducer\nimport news from './news'\nimport counter from './counter'\nimport weather from './weather'\nlet reducerList = { news, counter, weather }\n//combineReducers 辅助函数的作用是，把一个由多个不同 reducer 函数作为 value 的 object，\n//合并成一个最终的 reducer 函数，然后就可以对这个 reducer 调用 createStore\nconst reducers = combineReducers({ ...reducerList })\n\nconst rootReducer = (state, action) => {\n  return reducers(state, action)\n}\n\nexport default rootReducer\n","const result = (state = { data: [1, 2] }, action) => {\n  switch (action.type) {\n    case 'GET_NEWS':\n      return action.data\n    case 'MINUS':\n      return [2]\n    case 'MULTIPLY':\n      return [3]\n    case 'DIVIDE':\n      return [4]\n    default:\n      return state\n  }\n}\nexport default result\n","export default function(state = 1, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { state: 4 + 1 }\n    case 'DECREMENT':\n      return { state: 4 - 1 }\n    default:\n      return state\n  }\n}\n","export default function(state = {}, action) {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    case 'GET_CITYS':\n      return state\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nlet store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react'\nimport { Affix, List } from 'antd'\nimport '../../style/weather.scss'\nimport store from '../../reducers/store'\nimport { getWeatherInfo } from '../../actions/Index'\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      loading: true,\n      city: '宁波',\n      num1: 1,\n      num2: 1,\n      type: 'plus',\n      weatherInfo: store.getState().weather.data\n    }\n  }\n  render() {\n    const { weatherInfo } = this.state\n    return (\n      <div className=\"home\">\n        <Affix>\n          <h2>今日天气</h2>\n        </Affix>\n        <div className=\"computer-box\">\n          {weatherInfo ? this.renderWeather(weatherInfo.realtime) : ''}\n          <div className=\"weather-list\">\n            {weatherInfo ? this.renderList(weatherInfo.future) : ''}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  onNum1Change(value) {\n    this.setState({\n      num1: value\n    })\n  }\n  onNum2Change(value) {\n    this.setState({\n      num2: value\n    })\n  }\n  fnChange(e) {\n    console.log(e.target.value)\n    this.setState({\n      type: e.target.value\n    })\n  }\n  renderWeather(data) {\n    if (data) {\n      return (\n        <ul className=\"real-time\">\n          <li>\n            <span>当前</span>\n            <span>{data.info}</span>\n          </li>\n          <li>\n            <span>AQI</span>\n            <span>{data.aqi}</span>\n          </li>\n          <li>\n            <span>气温</span>\n            <span>{data.temperature}℃</span>\n          </li>\n          <li>\n            <span>{data.direct}</span>\n            <span>{data.power}</span>\n          </li>\n        </ul>\n      )\n    }\n  }\n  renderList(data) {\n    return (\n      <List\n        dataSource={data}\n        renderItem={item => (\n          <List.Item>\n            <h4>{item.date}</h4>\n            <p>\n              <span>{item.weather}</span>\n              <span>{item.temperature}</span>\n              <span>{item.direct}</span>\n            </p>\n          </List.Item>\n        )}\n      />\n    )\n  }\n  componentDidMount() {\n    let that = this\n    store.dispatch(getWeatherInfo('宁波'))\n    store.subscribe(() => {\n      that.setState(\n        {\n          weatherInfo: store.getState().weather.data\n        },\n        () => {\n          console.log(that.state.weatherInfo)\n        }\n      )\n    })\n  }\n  componentWillUpdate() {}\n}\nexport default Weather\n","import axios from 'axios'\nexport const plus = nums => ({\n  type: 'PLUS',\n  num1: nums[0],\n  num2: nums[1]\n})\nexport const minus = nums => ({\n  type: 'MINUS',\n  num1: nums[0],\n  num2: nums[1]\n})\nexport const multiply = nums => ({\n  type: 'MULTIPLY',\n  num1: nums[0],\n  num2: nums[1]\n})\nexport const divide = nums => ({\n  type: 'DIVIDE',\n  num1: nums[0],\n  num2: nums[1]\n})\nexport const getWeatherInfo = city => {\n  return dispatch => {\n    axios\n      .get(`/get_weatherInfo?city=${city}`)\n      .then(function(response) {\n        dispatch({\n          type: 'GET_WEATHER',\n          data: response.data\n        })\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n      .finally(function() {})\n  }\n}\nexport const getNewsInfo = type => {\n  return dispatch => {\n    axios\n      .get(`/get_news?type=${type}`)\n      .then(function(response) {\n        dispatch({\n          type: 'GET_NEWS',\n          data: response.data.data\n        })\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n      .finally(function() {})\n  }\n}\n","import React from 'react'\nimport { List, Avatar } from 'antd'\n// import '../../style/weather.scss'\n// import store from '../../reducers/store'\n// import { getWeatherInfo } from '../../actions/Index'\nconst Aticle = list => {\n  return (\n    <div>\n      <List\n        dataSource={list.content.data}\n        renderItem={item => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={item.thumbnail_pic_s} />}\n              title={<a href={item.url}>{item.title}</a>}\n              description={item.date + item.author_name}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  )\n}\nexport default Aticle\n","import React from 'react'\nimport { Affix, Select } from 'antd'\nimport '../../style/home.scss'\nimport { connect } from 'react-redux'\nimport { getNewsInfo } from '../../actions/Index'\nimport Aticle from './article'\nconst Option = Select.Option\n\nclass News extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      loading: true,\n      type: 'top',\n      newsType: [\n        {\n          name: '头条',\n          val: 'top'\n        },\n        {\n          name: '社会',\n          val: 'shehui'\n        },\n        {\n          name: '国内',\n          val: 'guonei'\n        },\n        {\n          name: '国际',\n          val: 'guoji'\n        },\n        {\n          name: '娱乐',\n          val: 'yule'\n        },\n        {\n          name: '体育',\n          val: 'tiyu'\n        },\n        {\n          name: '军事',\n          val: 'junshi'\n        },\n        {\n          name: '科技',\n          val: 'keji'\n        },\n        {\n          name: '财经',\n          val: 'caijing'\n        },\n        {\n          name: '时尚',\n          val: 'shishang'\n        }\n      ]\n    }\n  }\n  render() {\n    // const { weatherInfo } = this.state\n    return (\n      <div className=\"news\">\n        <Affix>\n          <h2>今日要闻</h2>\n        </Affix>\n        <div style={{ textAlign: 'center' }}>\n          <Select\n            defaultValue={this.state.newsType[0].name}\n            onChange={this.newTypeChange.bind(this)}\n            style={{ width: 190, marginTop: 10 }}\n          >\n            {this.renderSelect(this.state.newsType)}\n          </Select>\n        </div>\n\n        <div className=\"news-box\">\n          <Aticle content={this.props.data} title=\"fdjdsfjkh\" />\n        </div>\n      </div>\n    )\n  }\n  componentDidMount() {\n    this.props.getInitData(this.state.type)\n  }\n  componentWillUpdate() {}\n  renderSelect(types) {\n    let arr = []\n    types.forEach((element, index) => {\n      arr.push(\n        <Option key={index} value={element.val}>\n          {element.name}\n        </Option>\n      )\n    })\n    return arr\n  }\n  newTypeChange(value) {\n    this.setState(\n      {\n        type: value\n      },\n      () => {\n        this.props.getInitData(this.state.type)\n      }\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    data: state.news\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInitData: msg => {\n      dispatch(getNewsInfo(msg))\n    }\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(News)\n","import React from 'react'\n// import axios from 'axios'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport { Router, Route, Redirect } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport Home from './pages/home/home'\nimport Login from './pages/login/login'\nimport Register from './pages/login/register'\nimport Weather from './pages/weather/weather'\nimport News from './pages/news/news'\nconst history = createBrowserHistory()\n// const location = history.location\n// const unlisten = history.listen((location, action) => {\n//   console.log(action, location.pathname, location.state)\n// })\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: '',\n      pwd: '',\n      loggedIn: false\n    }\n  }\n\n  // getData() {\n  //   axios\n  //     .get('/get_movies')\n  //     .then(function(response) {\n  //       // handle success\n  //       console.log(response)\n  //     })\n  //     .catch(function(error) {\n  //       // handle error\n  //       console.log(error)\n  //     })\n  //     .finally(function() {\n  //       // always executed\n  //     })\n  // }\n  handleClick() {\n    history.push('/home', { some: 'state' })\n  }\n  render() {\n    const { loggedIn } = this.state\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          {/* <ul>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">register</Link>\n            </li>\n          </ul> */}\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              loggedIn ? (\n                <Redirect to=\"/dashboard\" />\n              ) : (\n                <Home router={history} />\n              )\n            }\n          />\n          <Route\n            path=\"/login\"\n            exact\n            render={() => <Login router={history} />}\n          />\n          <Route path=\"/home\" exact render={() => <Home router={history} />} />\n          <Route\n            path=\"/register\"\n            exact\n            render={() => <Register router={history} />}\n          />\n          <Route\n            path=\"/Weather\"\n            exact\n            render={() => <Weather router={history} />}\n          />\n          <Route path=\"/News\" exact render={() => <News router={history} />} />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './reducers/store'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}