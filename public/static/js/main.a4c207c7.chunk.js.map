{"version":3,"sources":["pages/home/home.js","pages/login/login.js","pages/login/register.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","loading","console","log","window","location","href","url","type","react_default","a","createElement","react_copy_to_clipboard_lib","text","onCopy","es_button","className","onClick","gotoDetail","bind","cloneBtUrl","_this2","_this$state","affix","list","itemLayout","dataSource","renderItem","item","Item","renderBtn","btUrl","lib_default","skeleton","active","avatar","Meta","src","postUrl","title","description","that","axios","get","then","response","setState","catch","error","finally","React","Component","Login","userName","pwd","e","preventDefault","params","md5","post","statue","message","msg","router","push","target","value","es_form","onSubmit","handleSubmit","input","prefix","icon","style","color","placeholder","onChange","handleUserInput","handlePwdInput","htmlType","Register","hobby","handleHobbyInput","history","createBrowserHistory","App","loggedIn","some","react_router","exact","path","render","to","login","home_home","register","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uZAoHeA,sBA7Gb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAM,CAAC,GAAI,GAAI,IACfC,SAAS,GAJMT,0EAORQ,GACTE,QAAQC,IAAIH,GACZI,OAAOC,SAASC,KAAON,qCAEdO,sCACDC,EAAMD,GACd,MAAa,UAATC,EAEAC,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CACEC,KAAMN,EACNO,OAAQ,WACNZ,QAAQC,IAAI,KAGdM,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,UACLQ,UAAU,cACVC,QAAStB,KAAKuB,WAAWC,KAAKxB,KAAMY,IAHtC,yCAWFE,EAAAC,EAAAC,cAACC,EAAA,gBAAD,CAAiBC,KAAMN,EAAKO,OAAQ,cAClCL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,UACLQ,UAAU,cACVC,QAAStB,KAAKyB,WAAWD,KAAKxB,KAAMY,IAHtC,sFAWC,IAAAc,EAAA1B,KAAA2B,EACmB3B,KAAKI,MAAvBC,EADDsB,EACCtB,KAAMC,EADPqB,EACOrB,QACd,OACEQ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAAA,uCAEFF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,WAAW,aACXC,WAAY1B,EACZ2B,WAAY,SAAAC,GAAI,OACdnB,EAAAC,EAAAC,cAACa,EAAA,EAAKK,KAAN,KAQGR,EAAKS,UAAUF,EAAKpB,KAAMoB,EAAKG,OAEhCtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,KACED,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAUhC,QAASA,EAASiC,QAAM,EAACC,QAAM,GACvC1B,EAAAC,EAAAC,cAACa,EAAA,EAAKK,KAAKO,KAAX,CACED,OAAQ1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQnB,UAAU,SAASqB,IAAKT,EAAKU,UAC7CC,MACE9B,EAAAC,EAAAC,cAAA,KAAGL,KAAK,oCACLsB,EAAKW,OAGVC,YAAaZ,EAAKG,2DAWlC,IAAIU,EAAO9C,KACX+C,IACGC,IAAI,eACJC,KAAK,SAASC,GACb3C,QAAQC,IAAI0C,GACZ,IAAIrB,EAAOqB,EAAS7C,KAAKA,KACrBwB,GACFiB,EAAKK,SACH,CACE9C,KAAMwB,GAER,WACE7B,KAAKmD,SAAS,CAAE7C,SAAS,QAKhC8C,MAAM,SAASC,GACd9C,QAAQC,IAAI6C,KAEbC,QAAQ,qBA1GIC,IAAMC,6DCgFVC,cAhFb,SAAAA,EAAY7D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACjB5D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAAtD,KAAAH,KAAMJ,KACDQ,MAAQ,CACXsD,SAAU,GACVC,IAAK,IAJU9D,4EAON+D,GACXA,EAAEC,iBACF,IAAMC,EAAS,CACbJ,SAAU1D,KAAKI,MAAMsD,SACrBC,IAAKI,IAAI/D,KAAKI,MAAMuD,MAElBb,EAAO9C,KACX+C,IACGiB,KAAK,SAAUF,GACfb,KAAK,SAASC,GAEb3C,QAAQC,IAAI0C,GACZ,IAAI7C,EAAO6C,EAAS7C,KACA,IAAhBA,EAAK4D,SACPC,IAAQ5D,QAAQD,EAAK8D,IAAK,IAC1BrB,EAAKlD,MAAMwE,OAAOC,KAAK,YAG1BjB,MAAM,SAASC,GAEd9C,QAAQC,IAAI6C,KAEbC,QAAQ,sDAIGM,GACd5D,KAAKmD,SAAS,CACZO,SAAUE,EAAEU,OAAOC,+CAGRX,GACb5D,KAAKmD,SAAS,CACZQ,IAAKC,EAAEU,OAAOC,yCAIhB,OACEzD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,SAAUzE,KAAK0E,aAAalD,KAAKxB,MAAOqB,UAAU,cACtDP,EAAAC,EAAAC,cAACwD,EAAA,EAAKtC,KAAN,KACEpB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAQ9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMhE,KAAK,OAAOiE,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,WACZT,MAAOvE,KAAKI,MAAMsD,SAClBuB,SAAUjF,KAAKkF,gBAAgB1D,KAAKxB,SAGxCc,EAAAC,EAAAC,cAACwD,EAAA,EAAKtC,KAAN,KACEpB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAQ9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMhE,KAAK,OAAOiE,MAAO,CAAEC,MAAO,qBAC1ClE,KAAK,WACLmE,YAAY,WACZT,MAAOvE,KAAKI,MAAMuD,IAClBsB,SAAUjF,KAAKmF,eAAe3D,KAAKxB,SAGvCc,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,UACLuE,SAAS,SACT/D,UAAU,qBAHZ,sEAjEUkC,IAAMC,WC2FX6B,cAxFb,SAAAA,EAAYzF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,IACjBxF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAlF,KAAAH,KAAMJ,KACDQ,MAAQ,CACXsD,SAAU,GACVC,IAAK,GACL2B,MAAO,IALQzF,4EAQN+D,GACXA,EAAEC,iBACF,IAAMC,EAAS,CACbJ,SAAU1D,KAAKI,MAAMsD,SACrBC,IAAKI,IAAI/D,KAAKI,MAAMuD,KACpB2B,MAAOtF,KAAKI,MAAMkF,OAEpBvC,IACGiB,KAAK,YAAaF,GAClBb,KAAK,SAASC,GAEb3C,QAAQC,IAAI0C,KAEbE,MAAM,SAASC,GAEd9C,QAAQC,IAAI6C,KAEbC,QAAQ,sDAIGM,GACd5D,KAAKmD,SAAS,CACZO,SAAUE,EAAEU,OAAOC,+CAGRX,GACb5D,KAAKmD,SAAS,CACZQ,IAAKC,EAAEU,OAAOC,iDAGDX,GACf5D,KAAKmD,SAAS,CACZmC,MAAO1B,EAAEU,OAAOC,yCAIlB,OACEzD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,SAAUzE,KAAK0E,aAAalD,KAAKxB,MAAOqB,UAAU,cACtDP,EAAAC,EAAAC,cAACwD,EAAA,EAAKtC,KAAN,KACEpB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAQ9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMhE,KAAK,OAAOiE,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,WACZT,MAAOvE,KAAKI,MAAMsD,SAClBuB,SAAUjF,KAAKkF,gBAAgB1D,KAAKxB,SAGxCc,EAAAC,EAAAC,cAACwD,EAAA,EAAKtC,KAAN,KACEpB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAQ9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMhE,KAAK,OAAOiE,MAAO,CAAEC,MAAO,qBAC1ClE,KAAK,WACLmE,YAAY,WACZT,MAAOvE,KAAKI,MAAMuD,IAClBsB,SAAUjF,KAAKmF,eAAe3D,KAAKxB,SAGvCc,EAAAC,EAAAC,cAACwD,EAAA,EAAKtC,KAAN,KACEpB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OACE9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMhE,KAAK,cAAciE,MAAO,CAAEC,MAAO,qBAE3CC,YAAY,6CACZT,MAAOvE,KAAKI,MAAMkF,MAClBL,SAAUjF,KAAKuF,iBAAiB/D,KAAKxB,SAGzCc,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,UACLuE,SAAS,SACT/D,UAAU,qBAHZ,yBA5EakC,IAAMC,WCEvBgC,EAAUC,cA2EDC,cApEb,SAAAA,EAAY9F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0F,IACjB7F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4F,GAAAvF,KAAAH,KAAMJ,KACDQ,MAAQ,CACXsD,SAAU,GACVC,IAAK,GACLgC,UAAU,GALK9F,6EAyBjB2F,EAAQnB,KAAK,QAAS,CAAEuB,KAAM,2CAEvB,IACCD,EAAa3F,KAAKI,MAAlBuF,SACR,OACE7E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAQL,QAASA,GASf1E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACNL,EACE7E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAUI,GAAG,eAEbnF,EAAAC,EAAAC,cAACkF,EAAD,CAAO9B,OAAQoB,OAIrB1E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACEE,KAAK,SACLD,OAAK,EACLE,OAAQ,kBAAMlF,EAAAC,EAAAC,cAACkF,EAAD,CAAO9B,OAAQoB,OAE/B1E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOE,KAAK,QAAQD,OAAK,EAACE,OAAQ,kBAAMlF,EAAAC,EAAAC,cAACmF,EAAD,CAAM/B,OAAQoB,OACtD1E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACEE,KAAK,YACLD,OAAK,EACLE,OAAQ,kBAAMlF,EAAAC,EAAAC,cAACoF,EAAD,CAAUhC,OAAQoB,gBA7D1BjC,IAAMC,WCHJ6C,QACW,cAA7B5F,OAAOC,SAAS4F,UAEe,UAA7B7F,OAAOC,SAAS4F,UAEhB7F,OAAOC,SAAS4F,SAASC,MACvB,2DCZNC,IAASR,OAAOlF,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7D,KAAK,SAAA8D,GACjCA,EAAaC","file":"static/js/main.a4c207c7.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport LazyLoad from 'react-lazyload'\nimport { List, Avatar, Button, Skeleton, Affix } from 'antd'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport '../../style/home.scss'\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [{}, {}, {}],\n      loading: true\n    }\n  }\n  gotoDetail(data) {\n    console.log(data)\n    window.location.href = data\n  }\n  cloneBtUrl(url) {}\n  renderBtn(type, url) {\n    if (type === 'blank') {\n      return (\n        <CopyToClipboard\n          text={url}\n          onCopy={() => {\n            console.log(9)\n          }}\n        >\n          <Button\n            type=\"primary\"\n            className=\"tool-button\"\n            onClick={this.gotoDetail.bind(this, url)}\n          >\n            点击查看详情\n          </Button>\n        </CopyToClipboard>\n      )\n    } else {\n      return (\n        <CopyToClipboard text={url} onCopy={() => {}}>\n          <Button\n            type=\"primary\"\n            className=\"tool-button\"\n            onClick={this.cloneBtUrl.bind(this, url)}\n          >\n            点击复制下载链接\n          </Button>\n        </CopyToClipboard>\n      )\n    }\n  }\n  render() {\n    const { data, loading } = this.state\n    return (\n      <div className=\"home\">\n        <Affix>\n          <h2>聚合电影</h2>\n        </Affix>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={data}\n          renderItem={item => (\n            <List.Item>\n              {/* <List.Item.Meta\n                avatar={<Avatar className=\"avatar\" src={item.postUrl} />}\n                title={\n                  <a href=\"http://tfboy.gearhostpreview.com\">{item.title}</a>\n                }\n                description={item.btUrl}\n              /> */}\n              {this.renderBtn(item.type, item.btUrl)}\n\n              <LazyLoad>\n                <Skeleton loading={loading} active avatar>\n                  <List.Item.Meta\n                    avatar={<Avatar className=\"avatar\" src={item.postUrl} />}\n                    title={\n                      <a href=\"http://tfboy.gearhostpreview.com\">\n                        {item.title}\n                      </a>\n                    }\n                    description={item.btUrl}\n                  />\n                </Skeleton>\n              </LazyLoad>\n            </List.Item>\n          )}\n        />\n      </div>\n    )\n  }\n  componentDidMount() {\n    let that = this\n    axios\n      .get('/get_movies')\n      .then(function(response) {\n        console.log(response)\n        let list = response.data.data\n        if (list) {\n          that.setState(\n            {\n              data: list\n            },\n            function() {\n              this.setState({ loading: false })\n            }\n          )\n        }\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n      .finally(function() {})\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport axios from 'axios'\nimport { Input, Form, Button, Icon } from 'antd'\nimport message from 'antd/es/message'\nimport md5 from 'blueimp-md5'\nclass Login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: '',\n      pwd: ''\n    }\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    const params = {\n      userName: this.state.userName,\n      pwd: md5(this.state.pwd)\n    }\n    let that = this\n    axios\n      .post('/login', params)\n      .then(function(response) {\n        // handle success\n        console.log(response)\n        let data = response.data\n        if (data.statue === 0) {\n          message.loading(data.msg, 0.1)\n          that.props.router.push('/home')\n        }\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error)\n      })\n      .finally(function() {\n        // always executed\n      })\n  }\n  handleUserInput(e) {\n    this.setState({\n      userName: e.target.value\n    })\n  }\n  handlePwdInput(e) {\n    this.setState({\n      pwd: e.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"login\">\n        <Form onSubmit={this.handleSubmit.bind(this)} className=\"login-form\">\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              value={this.state.userName}\n              onChange={this.handleUserInput.bind(this)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.pwd}\n              onChange={this.handlePwdInput.bind(this)}\n            />\n          </Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            登陆\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n  componentDidMount() {\n    // console.log(this.props)\n  }\n}\n\nexport default Login\n","import React from 'react'\nimport axios from 'axios'\nimport Input from 'antd/es/input' // 加载 JS\nimport Form from 'antd/es/form'\nimport Button from 'antd/es/button'\nimport Icon from 'antd/es/icon'\nimport md5 from 'blueimp-md5'\nclass Register extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: '',\n      pwd: '',\n      hobby: ''\n    }\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    const params = {\n      userName: this.state.userName,\n      pwd: md5(this.state.pwd),\n      hobby: this.state.hobby\n    }\n    axios\n      .post('/register', params)\n      .then(function(response) {\n        // handle success\n        console.log(response)\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error)\n      })\n      .finally(function() {\n        // always executed\n      })\n  }\n  handleUserInput(e) {\n    this.setState({\n      userName: e.target.value\n    })\n  }\n  handlePwdInput(e) {\n    this.setState({\n      pwd: e.target.value\n    })\n  }\n  handleHobbyInput(e) {\n    this.setState({\n      hobby: e.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"reg\">\n        <Form onSubmit={this.handleSubmit.bind(this)} className=\"login-form\">\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              value={this.state.userName}\n              onChange={this.handleUserInput.bind(this)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.pwd}\n              onChange={this.handlePwdInput.bind(this)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              prefix={\n                <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.25)' }} />\n              }\n              placeholder=\"喜欢的电影类型\"\n              value={this.state.hobby}\n              onChange={this.handleHobbyInput.bind(this)}\n            />\n          </Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            注册\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import React from 'react'\n// import axios from 'axios'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport { Router, Route, Redirect } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport Home from './pages/home/home'\nimport Login from './pages/login/login'\nimport Register from './pages/login/register'\nconst history = createBrowserHistory()\n// const location = history.location\n// const unlisten = history.listen((location, action) => {\n//   console.log(action, location.pathname, location.state)\n// })\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: '',\n      pwd: '',\n      loggedIn: false\n    }\n  }\n\n  // getData() {\n  //   axios\n  //     .get('/get_movies')\n  //     .then(function(response) {\n  //       // handle success\n  //       console.log(response)\n  //     })\n  //     .catch(function(error) {\n  //       // handle error\n  //       console.log(error)\n  //     })\n  //     .finally(function() {\n  //       // always executed\n  //     })\n  // }\n  handleClick() {\n    history.push('/home', { some: 'state' })\n  }\n  render() {\n    const { loggedIn } = this.state\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          {/* <ul>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">register</Link>\n            </li>\n          </ul> */}\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              loggedIn ? (\n                <Redirect to=\"/dashboard\" />\n              ) : (\n                <Login router={history} />\n              )\n            }\n          />\n          <Route\n            path=\"/login\"\n            exact\n            render={() => <Login router={history} />}\n          />\n          <Route path=\"/home\" exact render={() => <Home router={history} />} />\n          <Route\n            path=\"/register\"\n            exact\n            render={() => <Register router={history} />}\n          />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}